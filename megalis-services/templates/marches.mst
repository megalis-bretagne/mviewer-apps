{{#features}}
	<li class="item" id ="templateRight" style="">
		<h3 class="title-feature">{{organisme}}</h3>
		<div id="select-features-list">
			<span class="select-features">{{level}}</span>
			<span class="select-features">{{annee}}</span>
			<span class="select-features">SIREN : {{siren}}</span>
			<!-- Alerte: Chiffres de l'année en cours -->
			<p class="warning warning-info{{annee}}">Les informations affichées représentent l'année en cours</p>
		</div>

		<div id="user-{{service_sdm}}">

		    <!-- L'entité utilise le service -->
			<div class="user-service-oui">
				<div class="service-block-marches">
					<div class="col1">
						<div class="icon-block">
							<img class="icon" src="https://geobretagne.fr/apps/megalis-services/img/marches.svg">
						</div>
					</div>
					<div class="service-block-info">
						<p class="service-title">Salles des marchés publics</p>
						<p class="text-feature"><span class="glyphicon glyphicon-ok" aria-hidden="true"></span>  Service utilisé par la collectivité</p>
					</div>
				</div>
				<!-- Chiffres clés + graphique -->
				<div class="service-block-number row">
					<div class="col-sm-4">
						<div class="block-grey block-number center">
							<img class="icon" src="https://geobretagne.fr/apps/megalis-services/img/procedure.svg" style="width: 40px;">
							<p class="number-feature-marches">{{nb_procedure}}</p>
							<p class="title-number-feature-marches">procédure(s)</p>
							<p class="subtitle-number-feature">pour l'entité et l'année sélectionnées</p>
						</div>
					</div>
					<div class="col-sm-8">
						<div class="block-grey block-graph center">
							<div id="idChart">
								<canvas class="chart" id="ChartProc_{{siren}}" data-codegeo="{{siren}}" data-p1="{{nb_tot_pa}}" data-p2="{{nb_tot_pf_ac_sad}}" style="height:170px;width: content-box;"></canvas>
							</div>
							<p class="title-chart-feature">Répartition des procédures selon la nature</p>
								<p class="subtitle-number-feature">pour l'entité sélectionnée</p>
						</div>

					</div>
				</div>
				<div class="service-block-number row" style="padding: 0px 15px;">
						<div class="block-grey block-graph center">
							<div id="idChart">
								<canvas class="chart" id="ChartMarches_{{siren}}" style="height:170px;width: content-box;"></canvas>
							</div>
							<p class="title-chart-feature">Évolution des procédures lançées et réponses reçues</p>
								<p class="subtitle-number-feature">pour l'entité sélectionnée</p>
						</div>
				</div>
				<div class="acces-service-marches" style="">
					<div class="btn-link-user">
						<a href="https://marches.megalis.bretagne.bzh/entreprise" target="_blank">En savoir plus</a>
					</div>
				</div>
			</div>

			<!-- L'entité n'utilise pas le service -->
			<div class="user-service-non">
				<div class="icon-block-marches">
					<img class="icon" src="https://geobretagne.fr/apps/megalis-services/img/marches.svg">
				</div>
				<h2 class="user-title-feature-marches">Oops !</h2>
				<p class="text-feature">Il semble que cette collectivité n'a pas encore utilisé le service de salles des marchés publics cette année.</p>
				<div class="btn-link-user">
					<a href="https://services.megalis.bretagne.bzh/service/salle-des-marches-2/" target="_blank">En savoir plus</a>
				</div>

			</div>
		</div>

	</li>

<style>

	/* Définition des propriétés de style pour le service */
	:root {
		--mycolor:#161A30;
		--mycolortheme5:#514367;
		--myfont:'Inter', sans-serif;
	}
	/* */

	#templateRight {
		padding: 10px;
	}

	.title-feature {
		color: var(--mycolor);
	    font-family: var(--myfont);
	    font-size: 19px;
	    line-height: 1.2;
		font-weight: 700;
	}

	.subtitle-feature {
		color: var(--mycolor);
		font-family:var(--myfont);
		font-size:18px;
		margin-top:7%;
		line-height:1;
	}

	.text-feature, p {
		font-family:var(--myfont);
		color:#555;
		font-size:13px;
	}

	.center{
		text-align:center;
	}

	.block-grey {
    	border-radius: 20px;
    	background-color: #e2e2e28f;
    	height: 250px;
	}

	.block-number{
		padding: 50px 10px;
	}

	.block-graph{
		padding: 25px 15px;
	}

	/* Critères de selection des entités */

	span.select-features {
		background-color: var(--mycolor);
		padding: 5px 10px;
		color: white;
		font-size: 11px;
		font-family: var(--myfont);
		border-radius: 12px;
	}

	/* Message d'alerte sur la validité des informations */

	p.warning {
		font-size: 11px!important;
		font-style: italic!important;
		font-weight: 500!important;
		margin: 10px 0px;
	}

	.warning-info2019, .warning-info2020 {
		display:none;
	}

	.warning-info2021{
		display:block;
	}

	/* Affichage du contenu selon usagers O/N */
	#user-OUI .user-service-non {
		display:none;
	}

	#user-NON .user-service-oui {
		display:none;
	}

	/* Mise en fome USER-OUI */

	.user-service-oui {
		padding: 20px 0px;
	}

	.service-block-marches {
		background-color: var(--mycolortheme5);
		padding: 5%;;
    	border-radius: 20px;
	}

	.service-block-info {
		padding: 0px 0px 0px 90px;
		/* color: white!important; */
	}

	.user-service-oui .icon-block {
		width: 60px;
		padding: 12px;
		background-color: #ffffff33;
		border-radius: 15px;
		position: absolute;
	}

	.service-block-info p {
		color: white;
	}

	p.service-title {
		font-size: 14px;
		font-weight: 600;
		padding: 10px 0px 0px;
		margin: 0;
	}

	/* Numbers */

	.service-block-number {
		margin-top: 20px;
	}

	.number-feature-marches {
		font-size: 24px;
		font-weight: 600;
		color: var(--mycolortheme5);
		margin: 10px 0px 0px;
	}

	.title-number-feature-marches {
		font-weight: 600;
		color: var(--mycolortheme5);
		margin:0;
	}

	.subtitle-number-feature {
		font-size: 10px;
		font-style: italic;
	}

	/* Chart */

	p.title-chart-feature {
		font-size: 12px;
		font-weight: 600;
		margin: 0;
	}

	/* Bouton en savoir plus */

	.acces-service-marches {
		text-align: center;
   		margin: 0 auto;
	}

	/* Mise en fome USER-NON */

	.user-service-non {
		text-align:center;
		padding: 50px;
	}

	.user-service-non .icon-block-marches {
		background-color: var(--mycolortheme5);
		opacity: 0.8;
		width: 60px;
		border-radius: 15px;
		padding: 12px;
		margin: 0 auto;
	}

	h2.user-title-feature-marches {
		font-weight: 600!important;
		color: var(--mycolortheme5);
	}

	.btn-link-user {
		margin:40px 0px;
	}

	.btn-link-user a{
		font-family: var(--myfont);
		border: solid 1px #161A30;
		color: #161A30;
		padding: 8px 12px;
		border-radius: 8px;
		margin: 40px 0px;
	}

	.btn-link-user a:hover {
		background-color: #161A30;
		color: white!important;
		-webkit-transition: background-color 0.5s ease-out;
		-moz-transition: background-color 0.5s ease-out;
		-o-transition: background-color 0.5s ease-out;
		transition: background-color 0.5s ease-out;
	}

</style>

<script language="javascript">

  // Récupération du code_geo de l'entité selectionnée
  var c_geo = [];
            c_geo.push('{{siren}}');


  // Définition d'une fonction get_wfsdata
  function get_wfsdata(url, args, callback) {
        var qs = {
            "service" : "WFS",
            "version" : "2.0.0",
            "request" : "GetFeature",
            "outputFormat" : "application/json"
        };
        $.getJSON(url + $.param($.extend(qs, args)), callback);
    }


  // CHART 1 - Création d'un graphique de l'évolution des procédures

  get_wfsdata("https://geobretagne.fr/geoserver/megalis/wfs?",
        {
            "typeNames" : "services_organisme",
            "propertyName" : "annee,nb_procedure,nb_reponse",
            "CQL_FILTER" : "siren="+ c_geo +""
        },
        function (data) {

          /* Fonction pour ranger les données dans l'ordre croissant selon les années */
          function sortByKey(array, key) {
            return array.sort(function(a, b) {
                var x = a[key]; var y = b[key];
                return ((x < y) ? -1 : ((x > y) ? 1 : 0));
            });
            }

          /* Transformation de la donnée JSON */

          var dataMarches = data;


          var features = [];
          features = dataMarches.features;

          var jproperties = dataMarches.features.map(function (el) {
            return el.properties;
          });

          // Tri croissant des données selon l'année
          var dataOrderbyYear = [];
          dataOrderbyYear = sortByKey(jproperties,'annee');
          console.log(dataOrderbyYear);

          // Définition des variables pour le graphique
          var labels = jproperties.map(function(obj) {
            return obj.annee;
          });
          var dataNproc = jproperties.map(function(obj) {
            return obj.nb_procedure;
          });;
		  var dataNrep = jproperties.map(function(obj) {
            return obj.nb_reponse;
          });;

          // CRéation du graphique
          var graph_evo_marches = {};

          graph_evo_marches.getData = function () {
            var data = {chart_marches: {labels:labels, data: {datasets1:[dataNproc], datasets2:[dataNrep]}}};
            console.log(data);
            graph_evo_marches.drawChart(data);
          };

          graph_evo_marches.drawChart = function (data) {
          var ctx = document.getElementById("ChartMarches_{{siren}}");
          var ChartMarches_{{siren}} = new Chart(ctx, {
                  type: 'bar',
                  data: {
                      labels: data.chart_marches.labels,
                      datasets: [{
                          label: "Procédures",
                          backgroundColor: "rgba(81,67,103,0.9)",
                          borderColor: "rgba(81,67,103,0.9)",
                          borderWidth: 0,
						  borderRadius: 20,
						  borderSkipped: false,
						  barThickness: 10,
      					  maxBarThickness: 20,
                          hoverBackgroundColor: "rgba(81,67,103,1)",
                          hoverBorderColor: "rgba(81,67,103,1)",
                          data: data.chart_marches.data.datasets1[0]
                      },
					  {
                          label: "Réponses",
                          backgroundColor: "rgba(95,192,195,0.9)",
                          borderColor: "rgba(31,32,37,0.9)",
                          borderWidth: 0,
						  borderRadius: 20,
						  borderSkipped: false,
						  barThickness: 10,
      					  maxBarThickness: 20,
                          hoverBackgroundColor: "rgba(31,32,37,1)",
                          hoverBorderColor: "rgba(31,32,37,1)",
                          data: data.chart_marches.data.datasets2[0]
                      }]
                  },
                  options: {
                    maintainAspectRatio: false,
    				responsive:true,
					scales: {
						x: {
							ticks: {
								font: {
									family: 'Inter',
									size: 12,
									lineHeight: 2,
								}
							},
							grid: {
								display:false
							}
						},
						y: {
							ticks: {
								font: {
									family: 'Inter',
									size: 12
								}
							}
						}
					},
					plugins: {
						legend: {
							labels: {
								font: {
									family: 'Inter',
									size: 11
								}
							}
						},
						tooltip: {
							titleFont: {
									family: 'Inter'
							},
							bodyFont: {
									family: 'Inter',
									size: 11
							},
							callbacks: {
							}
						}
					}
                  }
              });
            };
            if  (typeof Chart === 'function') {
              graph_evo_marches.getData();
          } else {
              $.get('https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.0.2/chart.min.js', function() {
                graph_evo_marches.getData();

              });
          }
        }
    );

	// CHART  - Camembert des procédures selon la nature

  var graph_proc_cat = {};
  graph_proc_cat.getData = function () {
    var code_geo = $("#ChartProc_{{siren}}").attr("data-codegeo");
    var data = {chart_proc: {labels:["Procédures adaptées","Procédures formalisées"], data: {datasets:[[parseFloat($("#ChartProc_{{siren}}").attr("data-p1")),parseFloat($("#ChartProc_{{siren}}").attr("data-p2"))]]}}};
    console.log(data);
    graph_proc_cat.drawChart(data);
  };


  graph_proc_cat.drawChart = function (data) {
  var ctx = document.getElementById("ChartProc_{{siren}}");
  var ChartProc_{{siren}} = new Chart(ctx, {
          type: 'pie',
          data: {
              labels: data.chart_proc.labels,
              datasets: [{
                  label: "procédures",
                  data: data.chart_proc.data.datasets[0],
                  backgroundColor: [
                    "rgba(105,93,127,0.9)",
					"rgba(170,170,170,0.9)"
                  ],
                  hoverBackgroundColor: [
                    "rgba(105,93,127,1)",
					"rgba(170,170,170,0.9)"
                  ],
                  borderWidth: 0
              }]
          },
          options: {
            maintainAspectRatio: false,
    		responsive:true,
			plugins: {
						legend: {
							labels: {
								font: {
									family: 'Inter',
									size: 11
								}
							}
						},
						tooltip: {
							titleFont: {
									family: 'Inter'
							},
							bodyFont: {
									family: 'Inter',
									size: 11
							},
							callbacks: {
							}
						}
			}
          }
      });
    };

    if  (typeof Chart === 'function') {
      graph_proc_cat.getData();
  } else {
      $.get('https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.0.2/chart.min.js', function() {
        graph_proc_cat.getData();
      });
  }




</script>

{{/features}}